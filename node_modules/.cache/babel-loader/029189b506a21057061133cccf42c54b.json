{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\Unitrack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\Unitrack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\Unitrack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\Unitrack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\Unitrack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\Unitrack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\Unitrack\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\"; //import { Fetch } from \"react-request\";\n//import { Button } from \"reactstrap\";\n\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\"; // import \"assets/assets/scss/blk-design-system-react.scss\";\n// import \"assets/assets/css/nucleo-icons.css\";\n\nvar MyComponentClass =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyComponentClass, _React$Component);\n\n  function MyComponentClass(props) {\n    var _this;\n\n    _classCallCheck(this, MyComponentClass);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyComponentClass).call(this, props));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      dropdownOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(MyComponentClass, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          dropdownOpen: !prevState.dropdownOpen\n        };\n      });\n    }\n  }, {\n    key: \"changeValue\",\n    value: function changeValue(num) {\n      ReactDOM.render(React.createElement(MyComponentClassTwo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), document.getElementById(\"root\"));\n    }\n  }, {\n    key: \"tester\",\n    value: function tester(a) {\n      console.log(a);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //const people = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"J\", \"K\", \"L\", \"M\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"V\", \"W\", \"X\", \"Z\"];\n      fetch(\"http://webservices.nextbus.com/service/publicXMLFeed?command=routeList&a=unitrans\").then(function (response) {\n        return response.text();\n      }).then(function (text) {\n        return _this2.tester(text);\n      });\n      return (//      <div className=\"App\">\n        //        <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n        //          <DropdownToggle caret>Select A Bus Line :)</DropdownToggle>\n        //          <DropdownMenu>\n        //            <DropdownItem>\n        //              <div onClick={this.changeValue}>A</div>\n        //            </DropdownItem>\n        //            {people.map((person, index) => {\n        //              return <DropdownItem key={index} onClick={this.tester(index)}>{person}</DropdownItem>;\n        //            })}\n        //          </DropdownMenu>\n        //        </Dropdown>\n        //        \n        //      </div>\n        React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          className: \"browser-default custom-select\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Choose your option\"), React.createElement(\"option\", {\n          value: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Option 1\"), React.createElement(\"option\", {\n          value: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Option 2\"), React.createElement(\"option\", {\n          value: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Option 3\"), people.map(function (person, index) {\n          return React.createElement(\"option\", {\n            key: index,\n            onClick: _this2.tester(index),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, person);\n        }))) // <Fetch url=\"https://jsonplaceholder.typicode.com/todos/1\">\n        //   {({ fetching, failed, data }) => {\n        //     if (fetching) {\n        //       return <div>Loading data...</div>;\n        //     }\n        //     if (failed) {\n        //       return <div>The request did not succeed.</div>;\n        //     }\n        //     if (data) {\n        //       return (\n        //         <div>\n        //           <div>Post ID: </div>\n        //           <div>Post Title: </div>\n        //         </div>\n        //       );\n        //     }\n        //     return null;\n        //   }}\n        // </Fetch>\n\n      );\n    }\n  }]);\n\n  return MyComponentClass;\n}(React.Component);\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(MyComponentClass, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n}), rootElement);\n\nvar MyComponentClassTwo =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(MyComponentClassTwo, _React$Component2);\n\n  function MyComponentClassTwo(props) {\n    var _this3;\n\n    _classCallCheck(this, MyComponentClassTwo);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(MyComponentClassTwo).call(this, props));\n    _this3.toggle = _this3.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    _this3.state = {\n      dropdownOpen: false\n    };\n    return _this3;\n  }\n\n  _createClass(MyComponentClassTwo, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          dropdownOpen: !prevState.dropdownOpen\n        };\n      });\n    }\n  }, {\n    key: \"changeValue\",\n    value: function changeValue() {\n      alert(\"Test\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        isOpen: this.state.dropdownOpen,\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Select A Stop :)\"), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.changeValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"A\")), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"B\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"C\"), React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"D\"))));\n    }\n  }]);\n\n  return MyComponentClassTwo;\n}(React.Component);","map":{"version":3,"sources":["C:\\Users\\andre\\Desktop\\React\\Unitrack\\src\\index.js"],"names":["React","ReactDOM","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","MyComponentClass","props","toggle","bind","state","dropdownOpen","setState","prevState","num","render","document","getElementById","a","console","log","fetch","then","response","text","tester","people","map","person","index","Component","rootElement","MyComponentClassTwo","alert","changeValue"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import { Fetch } from \"react-request\";\n//import { Button } from \"reactstrap\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\n// import \"assets/assets/scss/blk-design-system-react.scss\";\n// import \"assets/assets/css/nucleo-icons.css\";\n\nclass MyComponentClass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      dropdownOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  changeValue(num) {\n    ReactDOM.render(<MyComponentClassTwo />, document.getElementById(\"root\"));\n  }\n    \n  tester(a) {\n      console.log(a)\n  }\n\n  render() {\n    //const people = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"J\", \"K\", \"L\", \"M\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"V\", \"W\", \"X\", \"Z\"];\n     \n     fetch(\"http://webservices.nextbus.com/service/publicXMLFeed?command=routeList&a=unitrans\")\n       .then(response => response.text())\n       .then(text => this.tester(text));\n      \n    return (\n//      <div className=\"App\">\n//        <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n//          <DropdownToggle caret>Select A Bus Line :)</DropdownToggle>\n//          <DropdownMenu>\n//            <DropdownItem>\n//              <div onClick={this.changeValue}>A</div>\n//            </DropdownItem>\n//            {people.map((person, index) => {\n//              return <DropdownItem key={index} onClick={this.tester(index)}>{person}</DropdownItem>;\n//            })}\n//          </DropdownMenu>\n//        </Dropdown>\n//        \n//      </div>\n       <div className=\"App\">\n        <select className=\"browser-default custom-select\">\n          <option>Choose your option</option>\n          <option value=\"1\">Option 1</option>\n          <option value=\"2\">Option 2</option>\n          <option value=\"3\">Option 3</option>\n            {people.map((person, index) => {\n              return <option key={index} onClick={this.tester(index)}>{person}</option>;\n            })}    \n        </select>\n      </div>\n\n      // <Fetch url=\"https://jsonplaceholder.typicode.com/todos/1\">\n      //   {({ fetching, failed, data }) => {\n      //     if (fetching) {\n      //       return <div>Loading data...</div>;\n      //     }\n\n      //     if (failed) {\n      //       return <div>The request did not succeed.</div>;\n      //     }\n\n      //     if (data) {\n      //       return (\n      //         <div>\n      //           <div>Post ID: </div>\n      //           <div>Post Title: </div>\n      //         </div>\n      //       );\n      //     }\n\n      //     return null;\n      //   }}\n      // </Fetch>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<MyComponentClass />, rootElement);\n\nclass MyComponentClassTwo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      dropdownOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  changeValue() {\n    alert(\"Test\");\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n          <DropdownToggle caret>Select A Stop :)</DropdownToggle>\n          <DropdownMenu>\n            <DropdownItem>\n              <div onClick={this.changeValue}>A</div>\n            </DropdownItem>\n            <DropdownItem>B</DropdownItem>\n            <DropdownItem>C</DropdownItem>\n            <DropdownItem>D</DropdownItem>\n          </DropdownMenu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}