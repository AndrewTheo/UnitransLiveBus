{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\Unitrack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\Unitrack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\Unitrack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\Unitrack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\Unitrack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\Unitrack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\React\\\\Unitrack\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\"; //import { Fetch } from \"react-request\";\n//import { Button } from \"reactstrap\";\n\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\nimport \"./shards.min.css\"; // import \"assets/assets/scss/blk-design-system-react.scss\";\n// import \"assets/assets/css/nucleo-icons.css\";\n\nvar MyComponentClass =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyComponentClass, _React$Component);\n\n  function MyComponentClass(props) {\n    var _this;\n\n    _classCallCheck(this, MyComponentClass);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyComponentClass).call(this, props));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      dropdownOpen: false,\n      selectedLine: \"None\",\n      selectLine: false,\n      inOut: false,\n      lineStop: \"None\"\n    };\n    return _this;\n  }\n\n  _createClass(MyComponentClass, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          dropdownOpen: !prevState.dropdownOpen\n        };\n      });\n    }\n  }, {\n    key: \"changeValue\",\n    value: function changeValue(num) {//ReactDOM.render(<MyComponentClassTwo />, document.getElementById(\"root\"));\n    }\n  }, {\n    key: \"tester\",\n    value: function tester(a) {\n      console.log(a);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var people = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"J\", \"K\", \"L\", \"M\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"V\", \"W\", \"X\", \"Z\"]; //var parseString = require('react-native-xml2js')\n\n      fetch(\"http://webservices.nextbus.com/service/publicXMLFeed?command=routeList&a=unitrans\").then(function (response) {\n        return response.text();\n      }).then(function (text) {\n        return _this2.tester(JSON.stringify(text));\n      });\n\n      if (this.state.inOut === false) {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          className: \"custom-select\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"Choose your Bus Line\"), people.map(function (person, index) {\n          return React.createElement(\"option\", {\n            value: index,\n            onChange: _this2.tester(\"1\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, person);\n        })));\n      }\n    }\n  }]);\n\n  return MyComponentClass;\n}(React.Component);\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(MyComponentClass, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}), rootElement);\n\nvar FlavorForm =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(FlavorForm, _React$Component2);\n\n  function FlavorForm(props) {\n    var _this3;\n\n    _classCallCheck(this, FlavorForm);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(FlavorForm).call(this, props));\n    _this3.state = {\n      value: 'none',\n      phase: '1'\n    };\n    _this3.handleChange = _this3.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    _this3.handleSubmit = _this3.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    return _this3;\n  }\n\n  _createClass(FlavorForm, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value,\n        phase: '2'\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      alert('Your favorite flavor is: ' + this.state.value);\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var busLines = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"J\", \"K\", \"L\", \"M\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"V\", \"W\", \"X\", \"Z\"];\n\n      if (this.state.phase == '1') {\n        return React.createElement(\"form\", {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \"Pick your favorite flavor:\", React.createElement(\"select\", {\n          class: \"custom-select\",\n          value: this.state.value,\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, busLines.map(function (bus, index) {\n          return React.createElement(\"option\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, bus);\n        }))));\n      }\n\n      if (this.state.phase == '2') {\n        return React.createElement(\"form\", {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"Pick your favorite flavor: \", this.state.value, React.createElement(\"select\", {\n          class: \"custom-select\",\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"InBound\"), React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"OutBound\"))));\n      }\n    }\n  }]);\n\n  return FlavorForm;\n}(React.Component);\n\nReactDOM.render(React.createElement(FlavorForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137\n  },\n  __self: this\n}), rootElement); // <Fetch url=\"https://jsonplaceholder.typicode.com/todos/1\">\n//   {({ fetching, failed, data }) => {\n//     if (fetching) {\n//       return <div>Loading data...</div>;\n//     }\n//     if (failed) {\n//       return <div>The request did not succeed.</div>;\n//     }\n//     if (data) {\n//       return (\n//         <div>\n//           <div>Post ID: </div>\n//           <div>Post Title: </div>\n//         </div>\n//       );\n//     }\n//     return null;\n//   }}\n// </Fetch>","map":{"version":3,"sources":["C:\\Users\\andre\\Desktop\\React\\Unitrack\\src\\index.js"],"names":["React","ReactDOM","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","MyComponentClass","props","toggle","bind","state","dropdownOpen","selectedLine","selectLine","inOut","lineStop","setState","prevState","num","a","console","log","people","fetch","then","response","text","tester","JSON","stringify","map","person","index","Component","rootElement","document","getElementById","render","FlavorForm","value","phase","handleChange","handleSubmit","event","target","alert","preventDefault","busLines","bus"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import { Fetch } from \"react-request\";\n//import { Button } from \"reactstrap\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\nimport \"./shards.min.css\";\n\n// import \"assets/assets/scss/blk-design-system-react.scss\";\n// import \"assets/assets/css/nucleo-icons.css\";\n\nclass MyComponentClass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      dropdownOpen: false,\n      selectedLine: \"None\",\n      selectLine: false,\n      inOut: false,\n      lineStop: \"None\"\n    };\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  changeValue(num) {\n    //ReactDOM.render(<MyComponentClassTwo />, document.getElementById(\"root\"));\n  }\n    \n  tester(a) {\n      console.log(a)\n  }\n\n  render() {\n    const people = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"J\", \"K\", \"L\", \"M\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"V\", \"W\", \"X\", \"Z\"];\n     //var parseString = require('react-native-xml2js')\n     fetch(\"http://webservices.nextbus.com/service/publicXMLFeed?command=routeList&a=unitrans\")\n       .then(response => response.text())\n       .then(text => \n             this.tester(JSON.stringify(text))\n            \n            \n            \n            );\n      if(this.state.inOut === false)\n      {      \n              return (\n                      <div className=\"App\">\n                        <select className=\"custom-select\">\n                          <option>Choose your Bus Line</option>\n                            {people.map((person, index) => {\n                              return <option value={index} onChange={this.tester(\"1\")}>{person}</option>;\n                            })}    \n                        </select>\n                      </div>\n\n              );\n      \n      }\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<MyComponentClass />, rootElement);\n\n\nclass FlavorForm extends React.Component {\n     \n    \n  constructor(props) {\n    super(props);\n    this.state = {value: 'none',\n                  phase: '1'};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value,\n                  phase:'2'});\n  }\n\n  handleSubmit(event) {\n    alert('Your favorite flavor is: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    const busLines = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"J\", \"K\", \"L\", \"M\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"V\", \"W\", \"X\", \"Z\"]; \n    if(this.state.phase == '1')\n    {\n      return (\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Pick your favorite flavor:\n              <select class = \"custom-select\" value={this.state.value} onChange={this.handleChange}>\n                    {busLines.map((bus, index) => {\n                        return <option >{bus}</option>;\n                    })}    \n              </select>\n            </label>\n          </form>\n        );\n    }\n    if(this.state.phase == '2')\n    {\n       return (\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Pick your favorite flavor: {this.state.value}\n              <select class = \"custom-select\" onChange={this.handleChange}>\n              \n                    <option>InBound</option>\n                    <option>OutBound</option>\n                      \n              </select>\n            </label>\n          </form>\n        ); \n    }\n  }\n}\n\n\nReactDOM.render(<FlavorForm />, rootElement);\n      // <Fetch url=\"https://jsonplaceholder.typicode.com/todos/1\">\n      //   {({ fetching, failed, data }) => {\n      //     if (fetching) {\n      //       return <div>Loading data...</div>;\n      //     }\n\n      //     if (failed) {\n      //       return <div>The request did not succeed.</div>;\n      //     }\n\n      //     if (data) {\n      //       return (\n      //         <div>\n      //           <div>Post ID: </div>\n      //           <div>Post Title: </div>\n      //         </div>\n      //       );\n      //     }\n\n      //     return null;\n      //   }}\n      // </Fetch>\n"]},"metadata":{},"sourceType":"module"}